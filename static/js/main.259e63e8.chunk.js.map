{"version":3,"sources":["component/coordTrans/coordTrans.js","component/bboxFinder/bboxFinder.js","App.js","reportWebVitals.js","index.js"],"names":["CoordTrans","prop","React","state","setState","searched","setSearched","openSnackbar","setOpenSnackbar","msg","setMsg","searchProj","setSearchProj","searchResults","setSearchResults","projections","toggleDrawer","open","event","type","key","projTransform","newProjCode","proj4def","curProj","proj4","defs","register","transformExtent","extent","content","name","bbox","ListItem","Tooltip","title","placement","className","IconButton","onClick","console","log","navigator","clipboard","writeText","copy","style","padding","fontSize","paddingLeft","reproject","join","Divider","Button","variant","color","marginLeft","Drawer","anchor","onClose","margin","marginRight","TextField","id","size","placeholder","width","value","onChange","evt","query","target","fetch","then","response","json","results","length","i","result","code","push","Typography","display","gutterBottom","Box","sx","List","map","index","proj","Snackbar","autoHideDuration","reason","message","BBoxFind","useState","setMap","featuresLayer","setFeaturesLayer","projection","setProjection","bboxButtMsg","setBboxButtMsg","minX","setMinX","maxY","setMaxY","maxX","setMaxX","minY","setMinY","Graticule","strokeStyle","Stroke","lineDash","showLabels","wrapX","graticule","mapElement","useRef","createBBox","xymin","xymax","geojsonObject","crs","properties","features","geometry","coordinates","layer","VectorLayer","source","VectorSource","GeoJSON","readFeatures","removeLayer","addLayer","geom","fromExtent","getSource","getExtent","scale","getView","fit","getSize","useEffect","initalFeaturesLayer","initialMap","Map","layers","TileLayer","OSM","current","view","View","center","zoom","on","handleMouseClick","coordinate","ref","newProj","getProjection","fromLonLat","getTransform","worldExtent","setWorldExtent","applyTransform","undefined","setExtent","newView","setView","newPolyExtent","component","m","flexDirection","autoComplete","label","inputProps","inputMode","pattern","validity","valid","Object","keys","forEach","Number","alert","handleSubmit","FormControlLabel","control","Checkbox","val","checked","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.259e63e8.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { transformExtent } from \"ol/proj\";\r\nimport proj4 from \"proj4\";\r\nimport { register } from \"ol/proj/proj4\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nexport default function CoordTrans(prop) {\r\n  const [state, setState] = React.useState(false);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [msg, setMsg] = React.useState(\"Copied\");\r\n  const [searchProj, setSearchProj] = React.useState(\"\");\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  // const projections = Object.keys(PROJS);\r\n  const projections = [\r\n    [\"EPSG:3857\", \"WGS 84 / Pseudo-Mercator\", [85.06, -180, -85.06, 180]],\r\n  ];\r\n\r\n  function search(query) {\r\n    fetch(\"https://epsg.io/?format=json&q=\" + query)\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        const results = json[\"results\"];\r\n        if (results && results.length > 0) {\r\n          console.log(\"results.length\", results);\r\n          let searchResults = [];\r\n          for (let i = 0; i < results.length; i++) {\r\n            const result = results[i];\r\n            if (result) {\r\n              const code = result[\"code\"];\r\n              const name = result[\"name\"];\r\n              const proj4def = result[\"proj4\"];\r\n              const bbox = result[\"bbox\"];\r\n              if (\r\n                code &&\r\n                code.length > 0 &&\r\n                proj4def &&\r\n                proj4def.length > 0 &&\r\n                bbox &&\r\n                bbox.length === 4\r\n              ) {\r\n                searchResults.push({ code, name, proj4def, bbox });\r\n              }\r\n            }\r\n          }\r\n          setSearchResults(searchResults);\r\n        } else {\r\n          setSearchResults([]);\r\n        }\r\n        setSearched(true);\r\n      });\r\n  }\r\n\r\n  function copy(name, content) {\r\n    console.log(\"copy\", content);\r\n    navigator.clipboard.writeText(content);\r\n    setMsg(\"Copied \" + name);\r\n    setOpenSnackbar(true);\r\n  }\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState(open);\r\n  };\r\n\r\n  function projTransform(newProjCode, proj4def = null) {\r\n    if (prop.curProj && newProjCode) {\r\n      if (proj4def) {\r\n        proj4.defs(newProjCode, proj4def);\r\n        register(proj4);\r\n      }\r\n      return transformExtent(prop.extent, prop.curProj, newProjCode);\r\n    }\r\n  }\r\n  // prop.reproject(newProjCode, bbox)\r\n  //\r\n  const content = (name, newProjCode, extent, bbox) => (\r\n    <div key={newProjCode}>\r\n      <ListItem>\r\n        <Tooltip title={name} placement=\"left\">\r\n          <div>\r\n            <div className=\"item-head\">\r\n              <span className=\"prim\">{newProjCode}</span>\r\n              <span className=\"quick-icons\">\r\n                <IconButton\r\n                  onClick={() => copy(newProjCode, extent)}\r\n                  style={{ padding: 0, fontSize: \"17px\" }}\r\n                >\r\n                  <i className=\"icon-copy\" style={{ paddingLeft: 5 }}></i>\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => prop.reproject(newProjCode, bbox)}\r\n                  style={{ padding: 0, fontSize: \"17px\" }}\r\n                >\r\n                  <i className=\"icon-globe\" style={{ paddingLeft: 5 }}></i>\r\n                </IconButton>\r\n              </span>\r\n            </div>\r\n            <p className=\"secnd\">{`[${extent.join(\", \")}]`}</p>\r\n          </div>\r\n        </Tooltip>\r\n      </ListItem>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  const drawerContent = () => (\r\n    <Box sx={{ width: 250 }}>\r\n      <List>\r\n        {searched ? (\r\n          searchResults.length !== 0 ? (\r\n            searchResults.map((result, index) =>\r\n              content(\r\n                result[\"name\"],\r\n                \"EPSG:\" + result[\"code\"],\r\n                projTransform(\"EPSG:\" + result[\"code\"], result[\"proj4def\"]),\r\n                result[\"bbox\"]\r\n              )\r\n            )\r\n          ) : (\r\n            <ListItem>\r\n              <div className=\"secnd\"> No projection found. </div>\r\n            </ListItem>\r\n          )\r\n        ) : (\r\n          projections.map((proj, index) =>\r\n            content(proj[1], proj[0], projTransform(proj[0]), proj[2])\r\n          )\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div className=\"coord-trans-butt\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ marginLeft: 10 }}\r\n        onClick={toggleDrawer(true)}\r\n      >\r\n        Translate coordinates\r\n      </Button>\r\n      <Drawer anchor={\"right\"} open={state} onClose={toggleDrawer(false)}>\r\n        <div style={{ margin: 10 }}>\r\n          {/* search */}\r\n          <i className=\"material-icons\" style={{ marginRight: 10 }}>\r\n            search\r\n          </i>\r\n          <TextField\r\n            id=\"project-search\"\r\n            size=\"small\"\r\n            placeholder=\"3857\"\r\n            style={{ width: 150 }}\r\n            value={searchProj}\r\n            onChange={(evt) => {\r\n              setSearchProj(evt.target.value);\r\n              search(evt.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        {/* footnote */}\r\n        <Typography\r\n          variant=\"caption\"\r\n          display=\"block\"\r\n          gutterBottom\r\n          style={{ marginLeft: 10 }}\r\n        >\r\n          Result extent: [xMin, yMax, xMax, yMin]\r\n        </Typography>\r\n        {/* projections */}\r\n        {drawerContent()}\r\n\r\n        <Snackbar\r\n          open={openSnackbar}\r\n          autoHideDuration={3000}\r\n          onClose={handleClose}\r\n          message={msg}\r\n        />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CoordTrans from \"../coordTrans/coordTrans\";\r\nimport { get as getProjection, getTransform } from \"ol/proj\";\r\nimport { transformExtent } from \"ol/proj\";\r\n\r\n// ol stuff\r\nimport \"ol/ol.css\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport GeoJSON from \"ol/format/GeoJSON\";\r\nimport { fromExtent } from \"ol/geom/Polygon\";\r\nimport { applyTransform } from \"ol/extent\";\r\nimport Graticule from \"ol/layer/Graticule\";\r\nimport Stroke from \"ol/style/Stroke\";\r\n\r\n//css\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction BBoxFind() {\r\n  const [map, setMap] = useState();\r\n  const [featuresLayer, setFeaturesLayer] = useState();\r\n  const [projection, setProjection] = useState(\"EPSG:4326\");\r\n  const [bboxButtMsg, setBboxButtMsg] = useState(\"Create BBox\");\r\n  const [minX, setMinX] = useState(-64.4136974478633);\r\n  const [maxY, setMaxY] = useState(45.9488267828191);\r\n  const [maxX, setMaxX] = useState(0);\r\n  const [minY, setMinY] = useState(0);\r\n\r\n  // graticule layer\r\n  const [graticule] = useState(\r\n    new Graticule({\r\n      // the style to use for the lines, optional.\r\n      strokeStyle: new Stroke({\r\n        color: \"rgba(255,120,0,0.9)\",\r\n        width: 2,\r\n        lineDash: [0.5, 4],\r\n      }),\r\n      showLabels: true,\r\n      wrapX: false,\r\n    })\r\n  );\r\n\r\n  // get ref to div element - OpenLayers will render into this div\r\n  const mapElement = useRef();\r\n  // init map\r\n  useEffect(() => {\r\n    // create and add vector source layer\r\n    const initalFeaturesLayer = new VectorLayer({\r\n      source: new VectorSource(),\r\n    });\r\n\r\n    // init map\r\n    const initialMap = new Map({\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n        initalFeaturesLayer,\r\n      ],\r\n      target: mapElement.current,\r\n      view: new View({\r\n        projection: \"EPSG:4326\",\r\n        center: [0, 0],\r\n        zoom: 2,\r\n      }),\r\n    });\r\n\r\n    initialMap.on(\"click\", handleMouseClick);\r\n\r\n    // save map and vector layer references to state\r\n    setMap(initialMap);\r\n    setFeaturesLayer(initalFeaturesLayer);\r\n  }, []);\r\n\r\n  // remake poly\r\n  useEffect(() => {\r\n    if (featuresLayer) createBBox({ minX, maxY, maxX, minY });\r\n  }, [projection]);\r\n\r\n  function createBBox(extent) {\r\n    // [xmin,xmax,ymin,ymax]\r\n    let xymin, xymax;\r\n    xymin = [extent.minX, extent.minY];\r\n    xymax = [extent.maxX, extent.maxY];\r\n\r\n    const geojsonObject = {\r\n      type: \"FeatureCollection\",\r\n      crs: {\r\n        type: \"name\",\r\n        properties: {\r\n          name: projection,\r\n        },\r\n      },\r\n      features: [\r\n        {\r\n          type: \"Feature\",\r\n          geometry: {\r\n            type: \"Polygon\",\r\n            coordinates: [\r\n              [\r\n                [xymin[0], xymax[1]],\r\n                [xymax[0], xymax[1]],\r\n                [xymax[0], xymin[1]],\r\n                [xymin[0], xymin[1]],\r\n                [xymin[0], xymax[1]],\r\n              ],\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    const layer = new VectorLayer({\r\n      source: new VectorSource({\r\n        features: new GeoJSON().readFeatures(geojsonObject),\r\n      }),\r\n    });\r\n    map.removeLayer(featuresLayer);\r\n    map.addLayer(layer);\r\n    setFeaturesLayer(layer);\r\n\r\n    let geom = fromExtent(layer.getSource().getExtent());\r\n    geom.scale(3);\r\n    map.getView().fit(geom, { size: map.getSize() });\r\n  }\r\n\r\n  // mouse move handler\r\n  const handleMouseClick = (event) => {\r\n    console.log(event.coordinate);\r\n  };\r\n\r\n  const handleSubmit = (extent) => {\r\n    let msg = \"\";\r\n    Object.keys(extent).forEach((key) => {\r\n      if (extent[key] !== \"\" || extent[key] === 0) {\r\n        extent[key] = Number(extent[key]);\r\n      } else {\r\n        msg += `${key} `;\r\n      }\r\n    });\r\n    if (msg !== \"\") {\r\n      alert(msg + \"isn't looking right.\");\r\n      return;\r\n    }\r\n\r\n    createBBox(extent);\r\n    setBboxButtMsg(\"Update BBox\");\r\n  };\r\n\r\n  // https://openlayers.org/en/latest/examples/reprojection-by-code.html\r\n  function reproject(code, bbox) {\r\n    const newProj = getProjection(code);\r\n    const fromLonLat = getTransform(\"EPSG:4326\", newProj);\r\n\r\n    let worldExtent = [bbox[1], bbox[2], bbox[3], bbox[0]];\r\n    newProj.setWorldExtent(worldExtent);\r\n\r\n    // approximate calculation of projection extent,\r\n    // checking if the world extent crosses the dateline\r\n    if (bbox[1] > bbox[3]) {\r\n      worldExtent = [bbox[1], bbox[2], bbox[3] + 360, bbox[0]];\r\n    }\r\n    const extent = applyTransform(worldExtent, fromLonLat, undefined, 8);\r\n    newProj.setExtent(extent);\r\n    const newView = new View({\r\n      projection: newProj,\r\n    });\r\n    map.setView(newView);\r\n    newView.fit(extent);\r\n\r\n    let newPolyExtent = transformExtent(\r\n      [minX, maxY, maxX, minY],\r\n      projection,\r\n      code\r\n    );\r\n    setMinX(newPolyExtent[0]);\r\n    setMinY(newPolyExtent[1]);\r\n    setMaxX(newPolyExtent[2]);\r\n    setMaxY(newPolyExtent[3]);\r\n    setProjection(code);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapElement} className=\"map\"></div>\r\n      {/* TRANSLATE COORDINATES */}\r\n      <CoordTrans\r\n        curProj={projection}\r\n        extent={[minX, minY, maxX, maxY]}\r\n        minX={minX}\r\n        maxX={maxX}\r\n        minY={minY}\r\n        maxY={maxY}\r\n        reproject={reproject}\r\n      />\r\n\r\n      <div className=\"bot-bar\">\r\n        {/* BBox extent */}\r\n        <div className=\"coords-input\">\r\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\r\n            {projection}\r\n          </Typography>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            sx={{\r\n              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n              flexDirection: \"row\",\r\n              display: \"flex\",\r\n            }}\r\n            autoComplete=\"off\"\r\n            width=\"500\"\r\n          >\r\n            {/* Coord Inputs */}\r\n            <div>\r\n              {/* top left */}\r\n              <div>\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Min X\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={minX}\r\n                  inputProps={{\r\n                    inputMode: \"numeric\",\r\n                    pattern: \"-?[0-9]*.[0-9]*\",\r\n                  }}\r\n                  onChange={(evt) => {\r\n                    evt.target.validity.valid\r\n                      ? setMinX(evt.target.value)\r\n                      : console.log(\"error\");\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Max Y\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={maxY}\r\n                  inputProps={{\r\n                    inputMode: \"numeric\",\r\n                    pattern: \"-?[0-9]*.[0-9]*\",\r\n                  }}\r\n                  onChange={(evt) => {\r\n                    evt.target.validity.valid\r\n                      ? setMaxY(evt.target.value)\r\n                      : console.log(\"error\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <br />\r\n              {/* bottom right */}\r\n              <div>\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Max X\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={maxX}\r\n                  inputProps={{\r\n                    inputMode: \"numeric\",\r\n                    pattern: \"-?[0-9]*.[0-9]*\",\r\n                  }}\r\n                  onChange={(evt) => {\r\n                    evt.target.validity.valid\r\n                      ? setMaxX(evt.target.value)\r\n                      : console.log(\"error\");\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Min Y\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={minY}\r\n                  inputProps={{\r\n                    inputMode: \"numeric\",\r\n                    pattern: \"-?[0-9]*.[0-9]*\",\r\n                  }}\r\n                  onChange={(evt) => {\r\n                    evt.target.validity.valid\r\n                      ? setMinY(evt.target.value)\r\n                      : console.log(\"error\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={() => {\r\n                handleSubmit({ minX, maxY, maxX, minY });\r\n              }}\r\n            >\r\n              {bboxButtMsg}\r\n            </Button>\r\n            <FormControlLabel\r\n              style={{ paddingLeft: 30 }}\r\n              control={\r\n                <Checkbox\r\n                  color=\"default\"\r\n                  onChange={(val) => {\r\n                    if (val.target.checked) {\r\n                      map.addLayer(graticule);\r\n                    } else {\r\n                      map.removeLayer(graticule);\r\n                    }\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Graticule\"\r\n            />\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BBoxFind;\r\n","import \"./App.css\";\r\nimport BBoxFind from \"./component/bboxFinder/bboxFinder\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BBoxFind />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}